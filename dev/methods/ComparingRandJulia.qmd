---
title: "Comparing R and Julia"
format: 
  commonmark:
    variant: -raw_html+tex_math_dollars
    wrap: none
execute: 
  freeze: auto
  eval: true
  echo: true
  output: true
julia: julia-1.10
bibliography: ../../../references.bib
---

```{julia activate_environment}
#| include: false
using Pkg; Pkg.activate("docs")
```

## Outline


## R vs Julia Dune Data

Let's see how the R function `ca::ca()` compares to the Julia function `correspondence_analysis()` defined above.

First load the `dune` dataset bundled in `{vegan}`.


::: {.panel-tabset}

## Julia

```{julia load_dune_julia}
begin
	dune_df = CSV.read("./docs/src/data/dune.csv", DataFrame, header = 1)
	dune_na = NamedArray(Array(dune_df))
	NamedArrays.setnames!(dune_na, names(dune_df), 2)
end
```

## R

```{r load_dune_r}
dune <- as.matrix(read.csv(file = "./docs/src/data/dune.csv"))
```

:::

### Run CA in Julia on Dune data

```{julia dune_ca_julia}
dune_ca_julia = EcoVeg.correspondence_analysis(dune_na)
```

### Run CA in R using Dune data

```{r dune_ca_r}
dune_ca_r <- ca::ca(dune)
```

```{r dune_ca_r_results}
dune_ca_coords_r <- ca::cacoord(dune_ca_r)
dune_ca_r_rowcoord <- dune_ca_coords_r$rows
dune_ca_r_colcoord <- dune_ca_coords_r$columns
```

### Check equality of R and Julia CA results

Check whether the standard row (plot) and column (species) coordinates produced by the Julia function `correspondence_analaysis()` the R function `ca::ca()` are identical.

First retrieve the Julia results in R.

```{r dune_julia_vs_r}
dune_ca_julia <- JuliaCall::julia_eval("dune_ca_julia")
dune_ca_julia_rowcoord <- dune_ca_julia$rowcoord
dune_ca_julia_colcoord <- dune_ca_julia$colcoord
```

Then check for equivalence. Note that the row and column names are stripped from the Julia results when calling `JuliaCall::julia_eval("dune_ca_julia")`, so the R results are also unnamed.

The R function `all.equal` is used rather than `identical` as the Julia implementation returns results with higher precision.

```{r all.equal}
plots_allequal <- all.equal(dune_ca_julia_rowcoord, unname(dune_ca_r_rowcoord))
species_allequal <- all.equal(dune_ca_julia_colcoord, unname(dune_ca_r_colcoord))
isTRUE(all(plots_allequal, species_allequal))
```

Let's view the first two dimensions of the Julia and R results side-by-side.

```{r prepare_data}
#| echo: false
r_species <- dune_ca_r_rowcoord[, c("Dim1", "Dim2")] |>
  as.data.frame()
r_species["Language"] <- "R"
r_species["Group"] <- "Species"

julia_species <- dune_ca_julia_rowcoord[, 1:2] |>
  as.data.frame()
names(julia_species) <- c("Dim1", "Dim2")
julia_species["Language"] <- "Julia"
julia_species["Group"] <- "Species"

both_species <- rbind(r_species, julia_species)

r_plots <- dune_ca_r_colcoord[, c("Dim1", "Dim2")] |>
  as.data.frame()
r_plots["Language"] <- "R"
r_plots["Group"] <- "Plots"

julia_plots <- dune_ca_julia_colcoord[, 1:2] |>
  as.data.frame()
names(julia_plots) <- c("Dim1", "Dim2")
julia_plots["Language"] <- "Julia"
julia_plots["Group"] <- "Plots"

both_plots <- rbind(r_plots, julia_plots)

```

### Visualise standard coordinates

```{r plot_dune_julia_vs_r}
#| echo: false
ggplot2::ggplot() +
  ggplot2::geom_point(data = both_species, mapping = ggplot2::aes(x = Dim1, y = Dim2, color = "Species")) +
  ggplot2::geom_point(data = both_plots, mapping = ggplot2::aes(x = Dim1, y = Dim2, color = "Plots")) +
  ggplot2::facet_wrap(vars(Language)) +
  ggplot2::theme_minimal() +
  NULL
```

### Benchmark Functions

```{julia benchmark_julia}
@benchmark correspondence_analysis(dune_na)
```

```{r benchmark_r}
microbenchmark::microbenchmark(ca::ca(dune))
```


## References