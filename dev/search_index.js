var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = EcoVeg","category":"page"},{"location":"#EcoVeg","page":"Home","title":"EcoVeg","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for EcoVeg.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [EcoVeg]","category":"page"},{"location":"#EcoVeg.binary_similarity","page":"Home","title":"EcoVeg.binary_similarity","text":"binary_similarity(x::NamedArray, eq::AbstractString)\n\nCreate a personalised greeting for EcoVeg using a name.\n\n...\n\nArguments\n\nx::NamedArray: A site by species \neq::AbstractString: A representing an equation using the terms a, b, and c. The Jaccard similarity by default. \"(a ./ (a .+ b .+ c)) + I\".\n\n...\n\nExamples\n\nx = generatetestarray(rown = 10, coln = 10)\njulia>binarysimilarity(x, \"(a ./ (a .+ b .+ c)) + I\")\n\n\n\n\n\n","category":"function"},{"location":"#EcoVeg.generate_test_array-Tuple{}","page":"Home","title":"EcoVeg.generate_test_array","text":"greet_your_package_name(name)\n\nCreate a rown by coln NamedArray object containing random values.\n\n...\n\nArguments\n\nrown::Int64: The number of rows in the array.\ncoln::Int64: The number of columns in the array.\nzerop::Float64: The probability of a zero entry in the matrix (i.e. a species absence), a value between 0 and 1. 0.6 by default.\nincrement::Float64: The increment used in generating random values. 0.1 by default.\nrowprefix::String: The prefix to the row number. \"Releve\" by default.\ncolprefix::String: The prefix to the column number. \"Species\" by default.\nrowdim::String: The row dimension name. \"Releve\" by default.\ncoldim::String: The column dimension name. \"Species\" by default.\n\n...\n\nExamples\n\njulia>generate_test_array(rown = 10, coln = 10, min = 0.0, max = 1.0, increment = 0.1, rowprefix = \"Releve\", colprefix = \"Species\")\n\n\n\n\n\n","category":"method"},{"location":"#EcoVeg.nzfunc-Tuple{Function, NamedArrays.NamedArray}","page":"Home","title":"EcoVeg.nzfunc","text":"Draws heavily from the function outlines here: https://discourse.julialang.org/t/nanmean-options/4994/17\n\n\n\n\n\n","category":"method"}]
}
